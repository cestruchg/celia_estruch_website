islantilla_lepe <- islantilla_rows %>%
mutate(municipality_name = "lepe")
manga_cartagena <- manga_rows %>%
mutate(municipality_name = "cartagena")
manga_sanroque <- manga_rows %>%
mutate(municipality_name = "san roque")
# Combine the modified rows with the rest of the dataset
idealista_grouped <- idealista_grouped %>%
filter(municipality_name != "islantilla") %>%
bind_rows(islantilla_isla_cristina, islantilla_lepe)
rm(islantilla_rows, islantilla_isla_cristina, islantilla_lepe)
idealista_grouped <- idealista_grouped %>%
filter(municipality_name != "manga del mar menor") %>%
bind_rows(manga_cartagena, manga_sanroque)
rm(manga_rows, manga_cartagena, manga_sanroque)
# Update 'gran alacant' to 'santa pola' so they can be grouped together
idealista_grouped <- idealista_grouped %>%
mutate(municipality_name = ifelse(municipality_name == "gran alacant",
"santa pola", municipality_name),
municipality_name = ifelse(municipality_name == "cala de villajoyosa",
"villajoyosa", municipality_name),
municipality_name = ifelse(municipality_name == "montequinto",
"dos hermanas", municipality_name),
municipality_name = ifelse(municipality_name == "moraira",
"teulada", municipality_name),
municipality_name = ifelse(municipality_name == "sotogrande",
"san roque", municipality_name),
municipality_name = ifelse(municipality_name == "zahara de los atunes",
"barbate", municipality_name),
municipality_name = ifelse(municipality_name == "torre del mar",
"velez malaga", municipality_name))
idealista_grouped <- idealista_grouped %>%
group_by(municipality_name, year, province_name) %>%
summarise(price_per_m2_sale = median(price_per_m2_sale, na.rm = TRUE),
price_per_m2_rent = median(price_per_m2_rent, na.rm = TRUE),
num_ads_sale = sum(num_ads_sale, na.rm = TRUE),
num_ads_rent = sum(num_ads_rent, na.rm = TRUE),
.groups = "drop")
write_csv(idealista, "idealista/idealista_cleaned_v2.csv")
write_csv(idealista_grouped, "idealista/idealista_cleaned_grouped.csv")
write_csv(election_panel, file = "elections/Final databases/election_panel_cleaned.csv")
rm(manual_matches, idealista)
##_____________________________________#
## Merging Previous Datasets
unique_dataset <- full_join(income_municipal, migration_age_wide,
by = c("municipality_code", "municipality_name", "year"))
unique_dataset <- unique_dataset %>%
group_by(municipality_code, year) %>%
summarise(across(everything(), ~ coalesce(.[1], .[2])), .groups = "drop")
# revisar renters_owners_long amb owned_raw
unique_dataset <- full_join(unique_dataset, renters_owners_long,
by = c("municipality_code", "municipality_name", "year"))
unique_dataset <- unique_dataset %>%
group_by(municipality_code) %>%
fill(municipality_name, .direction = "downup") %>%
ungroup()
unique_dataset <- full_join(unique_dataset, unemployment,
by = c("municipality_code", "municipality_name", "year")) %>%
distinct()
unique_dataset <- unique_dataset %>%
group_by(municipality_code, municipality_name) %>%
fill(province_name, .direction = "downup") %>%
ungroup()
merged_dataset <- unique_dataset %>%
group_by(municipality_name, year) %>%
summarise(across(everything(), ~ coalesce(.[1], .[2])), .groups = "drop")
unique_dataset <- merged_dataset %>%
filter(!is.na(municipality_code))
rm(merged_dataset)
unique_dataset <- left_join(unique_dataset, gini_grouped[,-2],
by = c("municipality_code", "year")) %>%
mutate(year = as_factor(year))
unique_dataset <- unique_dataset %>%
group_by(municipality_code) %>%
fill(municipality_name, .direction = "downup") %>%
fill(province_name, .direction = "downup") %>%
ungroup()
unique_dataset <- full_join(election_panel, unique_dataset[, c(-1,-17)],
by = c("municipality_code", "year"))
unique_dataset <- unique_dataset %>%
group_by(municipality_code) %>%
fill(municipality_name, .direction = "downup") %>%
fill(province_name, .direction = "downup") %>%
ungroup()
clean_names <- function(x) {
x %>%
tolower() %>%
gsub("-", " ", .) %>%
trimws()
}
# Clean both datasets
unique_dataset <- unique_dataset %>%
mutate(municipality_name = clean_names(municipality_name))
mayors <- mayors %>%
mutate(municipality_name = clean_names(municipality_name))
unique_dataset <- left_join(unique_dataset, mayors,
by = c("municipality_code", "municipality_name", "year"))
unique_dataset <- left_join(unique_dataset[-5], evictions_wide,
by = c("municipality_code", "municipality_name", "year"))
unique_dataset <- unique_dataset %>%
group_by(municipality_code, municipality_name) %>%
rename(province_name = province_name.x) %>%
fill(province_name, .direction = "downup") %>%
ungroup()
unique_dataset <- unique_dataset %>%
group_by(municipality_code, municipality_name) %>%
#rename(province_name = province_name.x) %>%
fill(province_name, .direction = "downup") %>%
ungroup()
rm(income_municipal, migration_age_wide, renters_owners_long, unemployment, election_ideology,
gini_grouped, election_panel, mayors, name_lookup, evictions_wide, renters_owners_long)
unique_dataset <- unique_dataset %>%
mutate(year = as.numeric(as.character(year)))
# Divide number of evictions/population of the judicial party
judicial_population <- read_xlsx("judicial_parties/judicial_population.xlsx")
judicial_population <- judicial_population %>% select(c(pj_name, pj_population))
View(judicial_population)
unique_dataset1 <- unique_dataset %>%
left_join(judicial_population, by = c("judicial_id" = "pj_name"))
View(unique_dataset1)
View(judicial_population)
unique_dataset1 <- unique_dataset1 %>%
group_by(municipality_code, municipality_name, province_name) %>%
fill(judicial_id, .direction = "downup") %>%
fill(pj_population, .direction = "downup") %>%
ungroup()
View(unique_dataset1)
names(unique_dataset)
file_path <- "evictions/judicial_parties/Datos crisis 2015_2024.xlsx"
sheet_names <- excel_sheets(file_path)
# Load all sheets into a named list and clean column names
eviction_data <- sheet_names %>%
set_names() %>%
map(~ read_xlsx(file_path, sheet = .x, skip = 4) %>%
clean_names())
# Assign to separate variables
mortgage_foreclosures_initiated <- eviction_data[["Ejecuciones hipotecarias"]]
monitory_proceedings <- eviction_data[["Monitorios"]]
evictions_judicial <- eviction_data[["Lanzamientos J1II"]]   # use II not ll
evictions_common_service <- eviction_data[["Lanzamientos SCE"]]
# Load judicial IDs
judicial_ids <- read_xlsx("judicial_parties/judicial_codes.xlsx") %>%
select(judicial_id = pj_name, judicial_code1 = pj_code, judicial_code2 = pj_id,
municipality_code, municipality_name) %>%
mutate(judicial_id = stri_trans_general(judicial_id, "Latin-ASCII"))
# Function to clean a sheet
clean_eviction_sheet <- function(sheet_data, value_prefix = "value") {
sheet_data <- clean_names(sheet_data)
first_col <- names(sheet_data)[1]
sheet_data %>%
select(1:11) %>%  # keep only first 11 columns: ID + 10 years
rename(judicial_id = !!first_col) %>%
rename_with(~ str_replace_all(., "x?(\\d{4})", paste0(value_prefix, "_\\1"))) %>%
mutate(judicial_id = stri_trans_general(judicial_id, "Latin-ASCII")) %>%
full_join(judicial_ids, by = "judicial_id") %>%
pivot_longer(cols = starts_with(value_prefix),
names_to = "year",
names_prefix = paste0(value_prefix, "_"),
values_to = value_prefix) %>%
mutate(year = as.integer(year))
}
mortgage_foreclosures_clean <- clean_eviction_sheet(mortgage_foreclosures_initiated, "foreclosures")
source("D:/Dropbox/Housing_Populism/Scripts/Celia/3_merging_datasets.R", echo=TRUE)
unique_dataset <- full_join(income_municipal, migration_age_wide,
by = c("municipality_code", "municipality_name", "year"))
View(unique_dataset)
summary(unique_dataset)
unique_dataset <- unique_dataset %>%
group_by(municipality_code) %>%
fill(avg_gross_inc_hh, .direction = "downup") %>%
ungroup()
summary(unique_dataset)
unique_dataset <- full_join(income_municipal, migration_age_wide,
by = c("municipality_code", "municipality_name", "year"))
unique_dataset <- unique_dataset %>%
group_by(municipality_code, year) %>%
summarise(across(everything(), ~ coalesce(.[1], .[2])), .groups = "drop")
# revisar renters_owners_long amb owned_raw
unique_dataset <- full_join(unique_dataset, renters_owners_long,
by = c("municipality_code", "municipality_name", "year"))
unique_dataset <- unique_dataset %>%
group_by(municipality_code) %>%
fill(municipality_name, .direction = "downup") %>%
ungroup()
unique_dataset <- full_join(unique_dataset, unemployment,
by = c("municipality_code", "municipality_name", "year")) %>%
distinct()
unique_dataset <- unique_dataset %>%
group_by(municipality_code, municipality_name) %>%
fill(province_name, .direction = "downup") %>%
ungroup()
merged_dataset <- unique_dataset %>%
group_by(municipality_name, year) %>%
summarise(across(everything(), ~ coalesce(.[1], .[2])), .groups = "drop")
unique_dataset <- merged_dataset %>%
filter(!is.na(municipality_code))
rm(merged_dataset)
unique_dataset <- left_join(unique_dataset, gini_grouped[,-2],
by = c("municipality_code", "year")) %>%
mutate(year = as_factor(year))
unique_dataset <- unique_dataset %>%
group_by(municipality_code) %>%
fill(municipality_name, .direction = "downup") %>%
fill(province_name, .direction = "downup") %>%
ungroup()
unique_dataset <- full_join(election_panel, unique_dataset[, c(-1,-17)],
by = c("municipality_code", "year"))
unique_dataset <- unique_dataset %>%
group_by(municipality_code) %>%
fill(municipality_name, .direction = "downup") %>%
fill(province_name, .direction = "downup") %>%
ungroup()
clean_names <- function(x) {
x %>%
tolower() %>%
gsub("-", " ", .) %>%
trimws()
}
# Clean both datasets
unique_dataset <- unique_dataset %>%
mutate(municipality_name = clean_names(municipality_name))
mayors <- mayors %>%
mutate(municipality_name = clean_names(municipality_name))
unique_dataset <- left_join(unique_dataset, mayors,
by = c("municipality_code", "municipality_name", "year"))
unique_dataset <- left_join(unique_dataset[-5], evictions_wide,
by = c("municipality_code", "municipality_name", "year"))
unique_dataset <- unique_dataset %>%
group_by(municipality_code, municipality_name) %>%
#rename(province_name = province_name.x) %>%
fill(province_name, .direction = "downup") %>%
ungroup()
rm(income_municipal, migration_age_wide, renters_owners_long, unemployment, election_ideology,
gini_grouped, election_panel, mayors, name_lookup, evictions_wide)
##_______________________________#
# Further cleaning changes
unique_dataset <- unique_dataset %>%
mutate(year = as.numeric(as.character(year)))
# Divide number of evictions/population of the judicial party
judicial_population <- read_xlsx("judicial_parties/judicial_population.xlsx")
judicial_population <- judicial_population %>% select(c(pj_name, pj_population))
unique_dataset1 <- unique_dataset %>%
left_join(judicial_population, by = c("judicial_id" = "pj_name"))
unique_dataset1 <- unique_dataset1 %>%
group_by(municipality_code, municipality_name, province_name) %>%
fill(judicial_id, .direction = "downup") %>%
fill(pj_population, .direction = "downup") %>%
ungroup()
unique_dataset <- unique_dataset %>%
mutate(across(c(foreclosure, monitorio, eviction_j1ll, eviction_sce),
~ . / pj_population * 100))
unique_dataset <- unique_dataset %>%
left_join(judicial_population, by = c("judicial_id" = "pj_name"))
unique_dataset <- unique_dataset %>%
group_by(municipality_code, municipality_name, province_name) %>%
fill(judicial_id, .direction = "downup") %>%
fill(pj_population, .direction = "downup") %>%
ungroup()
unique_dataset <- unique_dataset %>%
mutate(across(c(foreclosure, monitorio, eviction_j1ll, eviction_sce),
~ . / pj_population * 100))
# unemployment_abs: divide by working age population to compute share, using share_aged_16_64
unique_dataset <- unique_dataset %>%
mutate(unemployment_share = unemployment_abs / ((share_aged_16_64 / 100) * population) * 100) %>%
select(-unemployment_abs)
# remove 2 outliers (not NAs)
unique_dataset <- unique_dataset %>%
filter(unemployment_share <= 100 | is.na(unemployment_share))
save(unique_dataset, file = "elections/Junk databases/unique_dataset.RData")
election_idealista <- full_join(unique_dataset, idealista_grouped,
by = c("municipality_name", "year", "province_name")) %>%
mutate(match_status = case_when(municipality_name %in% idealista_grouped$municipality_name &
municipality_name %in% unique_dataset$municipality_name ~ "Matched",
municipality_name %in% idealista_grouped$municipality_name ~ "Unmatched in election_panel",
TRUE ~ "Unmatched in idealista")) %>%
mutate(match_status = as.factor(match_status))
election_idealista <- election_idealista %>%
group_by(municipality_name) %>%
fill(municipality_code, .direction = "downup") %>%
fill(province_name, .direction = "downup") %>%
ungroup() %>%
select(-match_status)
# Reorder variables
election_idealista <- election_idealista %>%
rename(party_mayor = party_id) %>%
mutate(province_name = ifelse(municipality_name == "alboraia", "Valencia", province_name),
province_name = ifelse(municipality_name == "almassora", "Castelló", province_name),
province_name = ifelse(municipality_name == "alqueria de la comtessa, l'", "Valencia", province_name),
province_name = ifelse(municipality_name == "alqueries, les", "Castelló", province_name),
province_name = ifelse(municipality_name == "ametlla del valles, l'", "Barcelona", province_name),
province_name = ifelse(municipality_name == "astillero, el", "Cantabria", province_name),
province_name = ifelse(municipality_name == "barrios, los", "Cádiz", province_name),
province_name = ifelse(municipality_name == "borriana", "Castelló", province_name),
province_name = ifelse(municipality_name == "burgo de ebro, el", "Zaragoza", province_name),
province_name = ifelse(municipality_name == "cabanyes, les", "Barcelona", province_name),
province_name = ifelse(municipality_name == "calonge i sant antoni", "Teruel", province_name),
province_name = ifelse(municipality_name == "calp", "Alacant", province_name),
province_name = ifelse(municipality_name == "campello, el", "Alacant", province_name),
province_name = ifelse(municipality_name == "canonja, la", "Tarragona", province_name),
province_name = ifelse(municipality_name == "castello de la plana", "Castelló", province_name),
province_name = ifelse(municipality_name == "catllar, el", "Tarragona", province_name),
province_name = ifelse(municipality_name == "cendea de olza", "Pamplona", province_name),
province_name = ifelse(municipality_name == "coruna, a", "A Coruña", province_name),
province_name = ifelse(municipality_name == "donostia", "Gipuzkoa", province_name),
province_name = ifelse(municipality_name == "franqueses del valles, les", "Barcelona", province_name),
province_name = ifelse(municipality_name == "gabias, las", "Granada", province_name),
province_name = ifelse(municipality_name == "garriga, la", "Barcelona", province_name),
province_name = ifelse(municipality_name == "garrovilla, la", "Badajoz", province_name),
province_name = ifelse(municipality_name == "granada, la", "Barcelona", province_name),
province_name = ifelse(municipality_name == "guadiana", "Badajoz", province_name),
province_name = ifelse(municipality_name == "guardia de jaen, la", "Jaén", province_name),
province_name = ifelse(municipality_name == "hospitalet de llobregat, l'", "Barcelona", province_name),
province_name = ifelse(municipality_name == "lastrilla, la", "Segovia", province_name),
province_name = ifelse(municipality_name == "linea de la concepcion, la", "Cádiz", province_name),
province_name = ifelse(municipality_name == "llocnou de la corona", "Valencia", province_name),
province_name = ifelse(municipality_name == "nucia, la", "Alacant", province_name),
province_name = ifelse(municipality_name == "palacios y villafranca, los", "Sevilla", province_name),
province_name = ifelse(municipality_name == "pallaresos, els", "Tarragona", province_name),
province_name = ifelse(municipality_name == "palma de cervello, la", "Barcelona", province_name),
province_name = ifelse(municipality_name == "palmas de gran canaria, las", "Las Palmas", province_name),
province_name = ifelse(municipality_name == "papiol, el", "Barcelona", province_name),
province_name = ifelse(municipality_name == "pereiro de aguiar, o", "Ourense", province_name),
province_name = ifelse(municipality_name == "pobla de farnals, la", "Valencia", province_name),
province_name = ifelse(municipality_name == "pobla de mafumet, la", "Tarragona", province_name),
province_name = ifelse(municipality_name == "poblets, els", "Alacant", province_name),
province_name = ifelse(municipality_name == "porrino, o", "Vigo", province_name),
province_name = ifelse(municipality_name == "prat de llobregat, el", "Barcelona", province_name),
province_name = ifelse(municipality_name == "puebla de alfinden, la", "Zaragoza", province_name),
province_name = ifelse(municipality_name == "puerto de santa maria, el", "Cádiz", province_name),
province_name = ifelse(municipality_name == "puerto real", "Cádiz", province_name),
province_name = ifelse(municipality_name == "puig de santa maria, el", "Valencia", province_name),
province_name = ifelse(municipality_name == "rafelbunyol", "Valencia", province_name),
province_name = ifelse(municipality_name == "real de gandia, el", "Valencia", province_name),
province_name = ifelse(municipality_name == "real sitio de san ildefonso", "Segovia", province_name),
province_name = ifelse(municipality_name == "regueras, las", "Asturias", province_name),
province_name = ifelse(municipality_name == "rinconada, la", "Sevilla", province_name),
province_name = ifelse(municipality_name == "roca del valles, la", "Barcelona", province_name),
province_name = ifelse(municipality_name == "rosario, el", "Santa Cruz de Tenerife", province_name),
province_name = ifelse(municipality_name == "rozas de madrid, las", "Madrid", province_name),
province_name = ifelse(municipality_name == "santa eularia des riu", "Illes Balears", province_name),
province_name = ifelse(municipality_name == "selva del camp, la", "Tarragona", province_name),
province_name = ifelse(municipality_name == "sopela", "Bizkaia", province_name),
province_name = ifelse(municipality_name == "torres de cotillas, las", "Murcia", province_name),
province_name = ifelse(municipality_name == "union, la", "Murcia", province_name),
province_name = ifelse(municipality_name == "valle de egues", "Pamplona", province_name),
province_name = ifelse(municipality_name == "villa de otura", "Granada", province_name),
province_name = ifelse(municipality_name == "villares, los", "Jaén", province_name),
province_name = ifelse(municipality_name == "viso del alcor, el", "Sevilla", province_name),
province_name = ifelse(municipality_name == "zubia, la", "Granada", province_name),
province_name = ifelse(municipality_name == "bigues i riells", "Barcelona", province_name),
province_name = ifelse(municipality_name == "llagosta, la", "Barcelona", province_name),
province_name = ifelse(municipality_name == "pla del penedes, el", "Barcelona", province_name),
province_name = ifelse(municipality_name == "alamo, el", "Madrid", province_name),
province_name = ifelse(municipality_name == "alfas del pi, l'", "Alacant", province_name),
province_name = ifelse(municipality_name == "algaba, la", "Sevilla", province_name),
province_name = ifelse(municipality_name == "palma", "Illes Balears", province_name),
province_name = ifelse(municipality_name == "puebla del rio, la", "Sevilla", province_name),
province_name = ifelse(municipality_name == "puebla del rio, la", "Barcelona", province_name))
##_______________________________#
# Incorporate urban areas data
urban_raw <- read_csv("urban_areas/urban_areas_cleaned.csv",
col_names = FALSE,
locale = locale(decimal_mark = ",", grouping_mark = "."),
col_types = cols(X1 = col_character(),   # AreaUrbana
X2 = col_character(),   # Municipio
X3 = col_number(),      # Superficie_km2
X4 = col_number(),      # Poblacion
X5 = col_number(),      # Densidad
X6 = col_number(),      # Porcentaje
X7 = col_character())    # Tipo
) |>
setNames(c("area_urbana","municipio","superficie_km2",
"poblacion","densidad","porcentaje","tipo")) |>
mutate(tipo = as.factor(tipo)) |>
filter(!is.na(superficie_km2) & !is.na(poblacion) & !is.na(densidad) & !is.na(porcentaje))
clean_municipality_name <- function(name) {
name %>%
stri_trans_general("Latin-ASCII") %>%  # Remove accents
str_to_lower() %>%                     # Convert to lowercase
str_extract("^[^/]+") %>%              # Extract text before the first slash
str_replace_all("-", " ") %>%          # Replace hyphens with spaces
str_replace_all("\\(.*\\)", "") %>%    # Remove text inside parentheses
str_replace_all("^l'\\s*", "") %>%     # Remove "l'" at the start
str_replace_all("^el\\s+|^la\\s+|^les\\s+|^las\\s+|^els\\s+|^los\\s+", "") %>%  # Remove leading articles
str_replace_all("\\((el|la|los|las|els|les|l')\\)", "") %>%  # Remove articles in ()
str_replace_all(",\\s*(el|la|los|las|els|les|l'|o|a)$", "") %>%   # Remove articles after comma
str_squish() %>%                    # Remove extra spaces
str_trim()                          # Final trim
}
urban_areas <- urban_raw %>%
mutate(municipality_name = clean_municipality_name(municipio)) %>%
select(-municipio)
urban_areas <- urban_areas %>%
mutate(municipality_name = ifelse(municipality_name == "alboraia", "alboraya", municipality_name),
municipality_name = ifelse(municipality_name == "palma", "palma de mallorca", municipality_name),
municipality_name = ifelse(municipality_name == "estrada", "a estrada", municipality_name),
municipality_name = ifelse(municipality_name == "mao mahon", "mayon", municipality_name),
municipality_name = ifelse(municipality_name == "cabanyes, les", "cabanyes", municipality_name),
municipality_name = ifelse(municipality_name == "borriana", "burriana", municipality_name),
municipality_name = ifelse(municipality_name == "porrino", "o porrino", municipality_name),
municipality_name = ifelse(municipality_name == "real sitio de san ildefonso", "san ildefonso", municipality_name),
municipality_name = ifelse(municipality_name == "calp", "calpe", municipality_name),
municipality_name = ifelse(municipality_name == "llocnou de la corona", "lugar nuevo de la corona", municipality_name),
municipality_name = ifelse(municipality_name == "torrenueva costa", "torrenueva", municipality_name),
municipality_name = ifelse(municipality_name == "santa eulalia", "santa eulalia del rio", municipality_name),
municipality_name = ifelse(municipality_name == "rafelbunyol", "rafelbunol", municipality_name),
municipality_name = ifelse(municipality_name == "santa eularia des riu", "santa eulalia del rio", municipality_name),
municipality_name = ifelse(municipality_name == "donostia", "donostia san sebastian", municipality_name),
municipality_name = ifelse(municipality_name == "coruna", "a coruna", municipality_name),
municipality_name = ifelse(municipality_name == "castello de la plana", "castellon de la plana", municipality_name),
municipality_name = ifelse(municipality_name == "calonge i sant antoni", "calonge", municipality_name))
election_idealista <- election_idealista %>%
mutate(municipality_name = clean_municipality_name(municipality_name))
election_idealista <- full_join(election_idealista, urban_areas, by = "municipality_name") %>%
filter(municipality_name != "3") %>%
group_by(municipality_name) %>%
fill(province_name, .direction = "downup") %>%
fill(municipality_code, .direction = "downup") %>%
ungroup() %>%
mutate(area_urbana = as.factor(area_urbana)) %>%
filter(!str_detect(municipality_name, "^\\d+$"))
rm(urban_raw)
election_idealista <- election_idealista %>%
select(-c(no_votes_3.5, no_votes_4.5, share_votes_3.5, share_votes_4.5))
#share_votes_4.5_delta_rel, share_votes_3.5_delta_rel,
#share_votes_3.5_delta_abs, share_votes_4.5_delta_abs))
# cleaning party_mayor categories
election_idealista <- election_idealista %>%
mutate(party_mayor = str_replace_all(party_mayor, "^[^a-zA-Z]+", ""),
party_mayor = str_replace_all(party_mayor, "\\s+", "_"),
party_mayor = str_replace_all(party_mayor, "\\W+", ""),
party_mayor = str_to_upper(party_mayor)) %>%
mutate(party_mayor = ifelse(str_detect(party_mayor, "(?i)gest"), "CGEST", party_mayor),
party_mayor = ifelse(str_detect(party_mayor, "(?i)bildu"), "BILDU", party_mayor),
party_mayor = ifelse(str_detect(party_mayor, "(?i)guanyem"), "GANEMOS", party_mayor),
party_mayor = ifelse(str_detect(party_mayor, "(?i)NADS|OTROS"), "OTHER", party_mayor))
rm(idealista_grouped, unique_dataset, clean_municipality_name, urban_areas, judicial_population)
election_idealista <- election_idealista %>%
group_by(municipality_code, year) %>%
summarise(across(everything(), ~ coalesce(.[1], .[2])), .groups = "drop")
election_idealista <- election_idealista %>%
select(-contains("delta"))
election_idealista <- election_idealista %>%
filter(municipality_name != "puig de santa maria")
summary(election_idealista)
# Impute population and income data for non-election or missing years
safe_approx <- function(y, x) {
if (!is.numeric(y)) return(y)            # skip characters/factors
if (sum(!is.na(y)) < 2) return(y)        # not enough points
zoo::na.approx(y, x = x, na.rm = FALSE, rule = 2)
}
vars_interp <- c("population", "avg_gross_inc_hh", "gini",
"share_aged_under_16", "share_aged_16_64", "share_aged_over_65",
"share_foreigner", "share_spanish", "unemployment_share",
"judicial_id", "judicial_code1", "judicial_code2",
"foreclosure", "monitorio", "eviction_j1ll", "eviction_sce",
"pj_population", "price_per_m2_sale", "price_per_m2_rent", "num_ads_sale", "num_ads_rent",
"superficie_km2", "poblacion", "densidad", "porcentaje", "area_urbana")
election_idealista <- election_idealista %>%
group_by(municipality_code) %>%
arrange(year, .by_group = TRUE) %>%
mutate(across(all_of(vars_interp), ~ safe_approx(.x, year))) %>%
ungroup()
summary(election_idealista)
colSums(is.na(election_idealista)) #NAs by variable
write_csv(election_idealista, file = "Final_datasets/unified_dataset_14_5.csv", na = "")
#db <- read_csv("Final_datasets/unified_dataset_14_5.csv")
##_____________________________________#
# Preparing dataset for v2seats in STATA
# Long format and unique id for each observation
seats_dataset <- election_idealista %>%
pivot_longer(cols = c(7:19),
names_to = "ideology",
values_to = "no_votes") %>%
mutate(ideology = str_to_lower(ideology),
ideology = str_replace_all(ideology, "\\D+", ""),  # Extract only the number
ideology = paste0("ideology_", ideology))
write_csv(seats_dataset, file = "Final_datasets/seats_dataset_14_5.csv", na = "")
##_____________________________________#
# Georgraphy of municipalities
#library(mapSpain)
#
#geography <- mapSpain::esp_munic.sf %>%
#  clean_names() %>%
#  select(c(municipality_code = lau_code,
#         municipality_name = name,
#         geometry))
View(election_idealista)
read_csv("elections/mayors_councilors/mayors_cleaned_def.csv")
hh <- read_csv("elections/mayors_councilors/mayors_cleaned_def.csv")
View(hh)
View(hh)
View(election_idealista)
hh <- election_idealista %>%  filter(year==2023)
hh <- election_idealista %>%  filter(year!=2023)
hh <- hh %>% select(municipality_code, municipality_name, party_mayor)
View(hh)
hh <- election_idealista %>%  filter(year!=2023)
hh <- hh %>% select(year, municipality_code, municipality_name, party_mayor)
hh <- hh %>%  filter(year==c(1999,2003, 2007, 2011, 2015, 2019))
summary(hh)
setwd("D:/OneDrive/Web/celia_estruch_website")
quarto add quarto-ext/fontawesome
install.packages("fontawesome")
quarto install extension quarto-ext/fontawesome
install.packages("AcademicThemes")
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
git add icons/
git add icons/*
cd "D:/OneDrive/Web/celia_estruch_website"  # Navigate to your project
